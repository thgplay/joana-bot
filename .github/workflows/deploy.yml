name: CI‑CD Joana (self‑hosted Windows)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [ self-hosted, windows ]

    steps:
      # 1. Checkout ‑‑ sempre clona branch correta
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Finaliza qualquer instância antiga de Node (index.js) ou joana.jar
      - name: Encerrar processos antigos
        shell: powershell
        run: |
          Write-Host "Matando Node (index.js)…"
          Get-CimInstance Win32_Process `
            | Where-Object { $_.Name -eq 'node.exe' -and $_.CommandLine -match 'index\.js' } `
            | ForEach-Object { Stop-Process -Id $_.ProcessId -Force }
          
          Write-Host "Matando joana.jar…"
          Get-CimInstance Win32_Process `
            | Where-Object { $_.Name -eq 'java.exe' -and $_.CommandLine -match 'joana\.jar' } `
            | ForEach-Object { Stop-Process -Id $_.ProcessId -Force }

      # … cabeçalho inalterado …

      # 3. Build lado Node
      - name: Setup Node 18 + cache
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: Install Node deps
        shell: bash
        working-directory: src/main/javascript
        run: npm ci


      # 4. Build lado Java
      - name: Setup JDK 17 + cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build joana.jar
        shell: bash
        run: mvn -B clean package -DskipTests

      # 5. Copia artefatos para produção
      - name: Deploy artefatos
        shell: powershell
        run: |
          $prodRoot = "C:\Apps\Joana"
          $nodeDst  = "$prodRoot\js"
          $jarDst   = "$prodRoot\joana.jar"
          
          New-Item -ItemType Directory -Path $nodeDst -Force | Out-Null
          
          # Copia JAR recém‑gerado
          $jar = Get-ChildItem "$env:GITHUB_WORKSPACE\target" -Filter "joana*.jar" | Select-Object -First 1
          if (-not $jar) { Throw "JAR não encontrado." }
          Copy-Item $jar.FullName $jarDst -Force
          
          # Sincroniza código Node (dist ou src)
          $nodeSrc = "$env:GITHUB_WORKSPACE\src\main\javascript"
          if (Test-Path "$nodeSrc\dist") {
              robocopy "$nodeSrc\dist" $nodeDst /MIR /NFL /NDL /NJH /NJS > $null
          } else {
              robocopy "$nodeSrc" $nodeDst /MIR /XF package*.json /NFL /NDL /NJH /NJS > $null
          }

      # 6. Relança Node e aplicação Java (detached)
      - name: Iniciar Joana Node + Java
        shell: powershell
        run: |
          $prodRoot = "C:\Apps\Joana"
          $nodeDir  = "$prodRoot\js"
          
          Write-Host "Iniciando Node (index.js)…"
          Start-Process -FilePath "node.exe" -WorkingDirectory $nodeDir -ArgumentList "index.js" `
                        -WindowStyle Hidden
          
          Write-Host "Iniciando joana.jar…"
          Start-Process -FilePath "java.exe" -WorkingDirectory $prodRoot -ArgumentList "-jar joana.jar" `
                        -WindowStyle Hidden
