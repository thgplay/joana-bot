name: CI‑CD Joana (self‑hosted Windows)

on:
  push:
    branches: [ "main" ]          # troque se usar master
  workflow_dispatch:              # permite rodar manualmente

jobs:
  deploy:
    runs-on: [self-hosted, windows]

    steps:
      # ───── Git clone ───────────────────────────────────────────────────
      - name: Checkout
        uses: actions/checkout@v4

      # ───── Encerrar instâncias antigas (Node + Java) ───────────────────
      - name: Stop Joana_Node e Joana_Java
        shell: powershell
        run: |
          & "C:\Windows\System32\nssm.exe" stop Joana_Node    *>$null
          & "C:\Windows\System32\nssm.exe" stop Joana_Java    *>$null

      # ───── Build JAR ───────────────────────────────────────────────────
      - name: Setup JDK 17 + cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build joana.jar
        shell: bash
        run: mvn -B clean package -DskipTests

      # ───── Build/prepare Node app ──────────────────────────────────────
      - name: Setup Node 18 + cache
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/main/javascript/package-lock.json'

      - name: Install Node deps
        shell: bash
        working-directory: src/main/javascript
        run: npm ci

      - name: Build (caso tenha script)
        shell: bash
        working-directory: src/main/javascript
        run: npm run build --if-present

      # ───── Deploy artefactos ───────────────────────────────────────────
      - name: Copiar artefactos para produção
        shell: powershell
        run: |
          $prodRoot = "C:\Apps\Joana"
          $nodeDst  = "$prodRoot\js"
          $jarDst   = "$prodRoot\joana.jar"
          
          New-Item -ItemType Directory -Path $nodeDst -Force | Out-Null
          
          # JAR
          $jar = Get-ChildItem "$env:GITHUB_WORKSPACE\target" -Filter "joana*.jar" | Select-Object -First 1
          if (-not $jar) { Throw "JAR não encontrado." }
          Copy-Item $jar.FullName $jarDst -Force
          
          # Node artefactos — se existir dist/, senão copia fonte JS
          $nodeSource = "$env:GITHUB_WORKSPACE\src\main\javascript"
          if (Test-Path "$nodeSource\dist") {
              robocopy "$nodeSource\dist"  $nodeDst  /MIR /NFL /NDL /NJH /NJS > $null
          } else {
              robocopy "$nodeSource"       $nodeDst  /MIR /XF package*.json /NFL /NDL /NJH /NJS > $null
          }

      # ───── Restart services ────────────────────────────────────────────
      - name: Start Joana services
        shell: powershell
        run: |
          & "C:\Windows\System32\nssm.exe" start Joana_Node
          & "C:\Windows\System32\nssm.exe" start Joana_Java
