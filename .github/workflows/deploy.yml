name: CI‑CD Joana (self‑hosted Windows)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [ self-hosted, windows ]

    steps:
      # 0. JDK 21 local
      - name: Set JAVA_HOME
        shell: powershell
        run: |
          Add-Content $env:GITHUB_ENV "JAVA_HOME=C:\Program Files\Java\jdk-21"
          Add-Content $env:GITHUB_ENV "PATH=C:\Program Files\Java\jdk-21\bin;$env:PATH"

      # 1. Checkout (traz 2 commits)
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2          # <‑‑ evita o erro do HEAD^

      # 2. Mata instâncias antigas
      - name: Encerrar processos antigos
        shell: powershell
        run: |
          Get-CimInstance Win32_Process |
            Where-Object { $_.Name -eq 'node.exe' -and $_.CommandLine -match 'index\.js' } |
            ForEach-Object { Stop-Process -Id $_.ProcessId -Force }
          Get-CimInstance Win32_Process |
            Where-Object { $_.Name -eq 'java.exe' -and $_.CommandLine -match 'joana\.jar' } |
            ForEach-Object { Stop-Process -Id $_.ProcessId -Force }

      # 3. Node + cache
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/main/javascript/package-lock.json

      - name: Cache node_modules
        id: node-cache
        uses: actions/cache@v4
        with:
          path: src/main/javascript/node_modules
          key:  ${{ runner.os }}-nm-${{ hashFiles('src/main/javascript/package-lock.json') }}
          restore-keys: ${{ runner.os }}-nm-

      - name: Install Node deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        working-directory: src/main/javascript
        run: npm ci --no-audit --no-fund --prefer-offline

      # 3‑b. Build JS só quando há mudanças
      - name: Build (caso tenha script)
        working-directory: src/main/javascript
        shell: powershell
        run: |
          # verifica se existe commit anterior ao HEAD
          git rev-parse --verify HEAD~1 2>$null
          if ($LASTEXITCODE -eq 0) {
          git diff --quiet HEAD~1 HEAD -- src/main/javascript
          $needBuild = ($LASTEXITCODE -ne 0)
          } else {
          Write-Host "Primeiro commit no branch → build forçado"
          $needBuild = $true
          }
          
          if ($needBuild) {
          Write-Host "Alterações em JS → executando build"
          npm run build --if-present
          } else {
          Write-Host "Nenhuma alteracao em JS → pulando build"
          }


      # 4. Build Java
      - name: Build joana.jar
        shell: powershell
        run: mvn -B clean package -DskipTests

      # 5. Deploy artefatos
      - name: Deploy artefatos
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          
          $prodRoot = 'C:\Apps\Joana'
          $nodeDst  = Join-Path $prodRoot 'js'
          $jarDst   = Join-Path $prodRoot 'joana.jar'
          
          if (-not (Test-Path $nodeDst)) {
          New-Item -ItemType Directory -Path $nodeDst -Force | Out-Null
          }
          
          # --- copia JAR ---
          $jar = Get-ChildItem "$env:GITHUB_WORKSPACE\target" -Filter 'joana*.jar' | Select-Object -First 1
          if (-not $jar) { throw 'JAR não encontrado.' }
          Copy-Item $jar.FullName $jarDst -Force
          
          # --- sincroniza código Node ---
          $nodeSrc = Join-Path $env:GITHUB_WORKSPACE 'src\main\javascript'
          $distDir = Join-Path $nodeSrc 'dist'
          
          if (Test-Path $distDir) {
          robocopy $distDir $nodeDst /MIR /NFL /NDL /NJH /NJS /NP
          } else {
          robocopy $nodeSrc $nodeDst /MIR /XF package*.json /NFL /NDL /NJH /NJS /NP
          }
          $rc = $LASTEXITCODE
          
          # Robocopy: 0–7 = sucesso, >=8 = erro
          if ($rc -ge 8) {
          Write-Error "Robocopy falhou (exit $rc)"
          exit $rc
          } else {
          exit 0
          }


      # 6. Sobe Node + Spring fora do runner
      - name: Iniciar Joana Node + Java
        shell: powershell
        run: |
          $prodRoot = 'C:\Apps\Joana'
          $nodeDir  = Join-Path $prodRoot 'js'
          
          # Node ------------------------------------------------------
          cmd /K start "Joana Node" /MAX /D "$nodeDir" ^
            cmd /K "echo ==== NODE STARTED ==== & node index.js ^> node.log 2^>^&1"
          
          # Java ------------------------------------------------------
          cmd /K start "Joana Java" /MAX /D "$prodRoot" ^
            cmd /K "echo ==== SPRING STARTED ==== & java -jar joana.jar ^> java.log 2^>^&1"
          
          exit 0


