name: CI‑CD Joana (self‑hosted Windows)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [ self-hosted, windows ]

    steps:
      #################################################################
      # 0. Torna o JDK‑21 local visível para Maven / Spring Boot      #
      #################################################################
      - name: Set JAVA_HOME e PATH
        shell: powershell
        run: |
          Add-Content $env:GITHUB_ENV "JAVA_HOME=C:\Program Files\Java\jdk-21"
          Add-Content $env:GITHUB_ENV "PATH=C:\Program Files\Java\jdk-21\bin;$env:PATH"

      #################################################################
      # 1. Checkout código                                            #
      #################################################################
      - uses: actions/checkout@v4

      #################################################################
      # 2. Encerra instâncias antigas                                 #
      #################################################################
      - name: Encerrar processos antigos
        shell: powershell
        run: |
          Get-CimInstance Win32_Process |
            Where-Object { $_.Name -eq 'node.exe' -and $_.CommandLine -match 'index\.js' } |
            ForEach-Object { Stop-Process -Id $_.ProcessId -Force }
          Get-CimInstance Win32_Process |
            Where-Object { $_.Name -eq 'java.exe' -and $_.CommandLine -match 'joana\.jar' } |
            ForEach-Object { Stop-Process -Id $_.ProcessId -Force }

      #################################################################
      # 3. Ambiente Node (cache npm + cache node_modules)             #
      #################################################################
      - uses: actions/setup-node@v4            # instala Node + cache global (~/.npm)
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/main/javascript/package-lock.json

      # cache do diretório node_modules pronto — chaveada pelo hash do lockfile
      - name: Cache node_modules
        id: node-cache
        uses: actions/cache@v4
        with:
          path: src/main/javascript/node_modules
          key:  ${{ runner.os }}-nm-${{ hashFiles('src/main/javascript/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nm-

      - name: Install Node deps (pula se veio do cache)
        if: steps.node-cache.outputs.cache-hit != 'true'
        working-directory: src/main/javascript
        run: |
          npm ci --no-audit --no-fund --prefer-offline

      # só reconstrói quando há mudanças no código JavaScript
      - name: Build (caso tenha script)
        working-directory: src/main/javascript
        shell: powershell
        run: |
          git diff --quiet HEAD^ HEAD -- src/main/javascript || npm run build --if-present

      #################################################################
      # 4. Build Java / Maven                                         #
      #################################################################
      - name: Build joana.jar
        shell: powershell
        run: mvn -B clean package -DskipTests

      #################################################################
      # 5. Deploy artefatos                                           #
      #################################################################
      - name: Deploy artefatos
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          
          $prodRoot = 'C:\Apps\Joana'
          $nodeDst  = Join-Path $prodRoot 'js'
          $jarDst   = Join-Path $prodRoot 'joana.jar'
          
          if (-not (Test-Path $prodRoot)) { New-Item -ItemType Directory -Path $prodRoot -Force | Out-Null }
          if (-not (Test-Path $nodeDst))  { New-Item -ItemType Directory -Path $nodeDst  -Force | Out-Null }
          
          # --- copia JAR ---
          $jar = Get-ChildItem "$env:GITHUB_WORKSPACE\target" -Filter 'joana*.jar' | Select-Object -First 1
          if (-not $jar) { throw 'JAR não encontrado.' }
          Copy-Item $jar.FullName $jarDst -Force
          
          # --- sincroniza código Node ---
          $nodeSrc = Join-Path $env:GITHUB_WORKSPACE 'src\main\javascript'
          $distDir = Join-Path $nodeSrc 'dist'
          
          if (Test-Path $distDir) {
            robocopy $distDir $nodeDst /MIR /NFL /NDL /NJH /NJS /NP
            $rc = $LASTEXITCODE
          } else {
            robocopy $nodeSrc $nodeDst /MIR /XF package*.json /NFL /NDL /NJH /NJS /NP
            $rc = $LASTEXITCODE
          }
          if ($rc -ge 8) { exit $rc }

      #################################################################
      # 6. Relança Node + Spring fora do job object do runner         #
      #################################################################
      - name: Iniciar Joana Node + Java
        shell: powershell
        run: |
          $prodRoot = 'C:\Apps\Joana'
          $nodeDir  = Join-Path $prodRoot 'js'
          
          cmd /c start "Joana Node" /D "$nodeDir" node index.js
          cmd /c start "Joana Java" /D "$prodRoot" java -jar joana.jar
