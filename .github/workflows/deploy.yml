name: CI‑CD Joana (self‑hosted Windows)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [ self-hosted, windows ]

    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Finaliza instâncias antigas
      - name: Encerrar processos antigos
        shell: powershell
        run: |
          Write-Host "Matando Node (index.js)…"
          Get-CimInstance Win32_Process |
            Where-Object { $_.Name -eq 'node.exe' -and $_.CommandLine -match 'index\.js' } |
            ForEach-Object { Stop-Process -Id $_.ProcessId -Force }
          
          Write-Host "Matando joana.jar…"
          Get-CimInstance Win32_Process |
            Where-Object { $_.Name -eq 'java.exe' -and $_.CommandLine -match 'joana\.jar' } |
            ForEach-Object { Stop-Process -Id $_.ProcessId -Force }

      # 3. Ambiente Node
      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Node deps
        working-directory: src/main/javascript
        run: npm ci

      - name: Build (caso tenha script)
        working-directory: src/main/javascript
        run: npm run build --if-present

      # 4. Instala JDK 17 manualmente
      - name: Install JDK 17 manually
        shell: powershell
        run: |
          $zipUrl  = "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.15%2B6/OpenJDK17U-jdk_x64_windows_hotspot_17.0.15_6.zip"
          $tmpZip  = "$env:TEMP\jdk17.zip"
          $dest    = "C:\Java"
          
          Invoke-WebRequest -Uri $zipUrl -OutFile $tmpZip
          New-Item -ItemType Directory -Path $dest -Force | Out-Null
          
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::ExtractToDirectory($tmpZip, $dest)
          
          $jdkHome = (Get-ChildItem $dest | Where-Object PSIsContainer | Select-Object -First 1).FullName
          Add-Content $env:GITHUB_ENV "JAVA_HOME=$jdkHome"
          Add-Content $env:GITHUB_ENV "PATH=$jdkHome\bin;$env:PATH"

      # 5. Build Java/Maven
      - name: Build joana.jar
        run: mvn -B clean package -DskipTests

      # 6. Deploy artefatos
      - name: Deploy artefatos
        shell: powershell
        run: |
          $prodRoot = "C:\Apps\Joana"
          $nodeDst  = "$prodRoot\js"
          $jarDst   = "$prodRoot\joana.jar"
          
          New-Item -ItemType Directory -Path $nodeDst -Force | Out-Null
          
          $jar = Get-ChildItem "$env:GITHUB_WORKSPACE\target" -Filter "joana*.jar" | Select-Object -First 1
          if (-not $jar) { Throw "JAR não encontrado." }
          Copy-Item $jar.FullName $jarDst -Force
          
          $nodeSrc = "$env:GITHUB_WORKSPACE\src\main\javascript"
          if (Test-Path "$nodeSrc\dist") {
              robocopy "$nodeSrc\dist" $nodeDst /MIR /NFL /NDL /NJH /NJS > $null
          } else {
              robocopy "$nodeSrc" $nodeDst /MIR /XF package*.json /NFL /NDL /NJH /NJS > $null
          }

      # 7. Relança Node + Java
      - name: Iniciar Joana Node + Java
        shell: powershell
        run: |
          $prodRoot = "C:\Apps\Joana"
          $nodeDir  = "$prodRoot\js"
          
          Write-Host "Iniciando Node (index.js)…"
          Start-Process -FilePath "node.exe" -WorkingDirectory $nodeDir -ArgumentList "index.js" -WindowStyle Hidden
          
          Write-Host "Iniciando joana.jar…"
          Start-Process -FilePath "java.exe" -WorkingDirectory $prodRoot -ArgumentList "-jar joana.jar" -WindowStyle Hidden
